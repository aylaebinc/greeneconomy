#         ),
#       by = c("residence" = "bg", "tier" = "time")
#     ) %>%
#     mutate(
#       jobs_car = jobs*perc_jobs_car,
#       jobs_carpool = jobs*perc_jobs_carpool,
#       vehicles = jobs*perc_vehicle,
#       vmt = person_miles*perc_vehicle
#     )
#
#     stockton_commute_vmt_bgmode <-
#       rbind(stockton_commute_vmt_bgmode,
#         data.frame(
#           Year = year,
#           person_miles = sum(stockton_lodes_h_mode$person_miles, na.rm=T),
#           jobs = sum(stockton_lodes_h_mode$jobs, na.rm=T),
#           jobs_car = sum(stockton_lodes_h_mode$jobs_car, na.rm=T),
#           jobs_carpool = sum(stockton_lodes_h_mode$jobs_carpool, na.rm=T),
#           vehicles = sum(stockton_lodes_h_mode$vehicles, na.rm = T),
#           vmt = sum(stockton_lodes_h_mode$vmt, na.rm=T)
#         )
#       )
#
#     save(stockton_commute_vmt_bgmode,file = "C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_bgmode.Rdata")
# }
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_bgmode.Rdata")
stockton_commute_vmt_bgmode %>%
ggplot(
aes(
x = Year,
y = vmt/jobs
)
) +
geom_line()
# stockton_commute_vmt_tractmode <- NULL
#
# for(year in 2011:2017){
#     print(year)
#
#     load(paste0("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_lodes_",year,"_tract.Rdata"))
#
#     load(paste0("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs5_vars_",year,".Rdata"))
#
#     travel_time_mode <-
#       getCensus(
#         name = "acs/acs5",
#         vintage = year,
#         region = "tract:*",
#         regionin = "state:06+county:077",
#         vars = "group(B08134)"
#       ) %>%
#       mutate(tract = paste0(state,county,tract)) %>%
#       select_if(!names(.) %in% c("GEO_ID","state","county","NAME")) %>%
#       dplyr::select(-c(contains("EA"),contains("MA"),contains("M"))) %>%
#       gather(
#         key = "variable",
#         value = "estimate",
#         -tract
#       ) %>%
#       mutate(
#         label = acs_vars$label[match(variable,acs_vars$name)],
#         time = # This extracts only the time information from our label.
#           substr(
#             label,
#             lapply(
#               label,
#               function(x){
#                 ifelse(
#                   length(unlist(gregexpr('!!',x)))<3,
#                   NA,
#                   max(unlist(gregexpr('!!',x)))+2
#                 )
#               }
#             ),
#             nchar(label)
#           ),
#         mode = # This extracts only the mode information from our label. It doesn't fully deal with double-counting, so some are further removed later on in a filter.
#           substr(
#             label,
#             lapply(
#               label,
#               function(x){
#                 ifelse(
#                   length(unlist(gregexpr('!!',x)))<3,
#                   NA,
#                   unlist(gregexpr('!!',x))[length(unlist(gregexpr('!!',x)))-1]+2
#                 )
#               }
#             ),
#             lapply(
#               label,
#               function(x){
#                 max(unlist(gregexpr('!!',x)))-1
#               }
#             )
#           )
#       ) %>%
#       filter(!is.na(time)) %>% # This removes the grand total rows that are usually at the top of the ACS data.
#       filter(!mode %in% c("Car, truck, or van","Car truck or van","Carpooled","Public transportation (excluding taxicab)")) %>% # This removes double-counted subtotals.
#       dplyr::select(-variable,-label)
#
#     travel_time_mode_summary <-
#       travel_time_mode %>%
#       group_by(tract,time) %>%
#       summarize(
#         jobs = sum(estimate),
#         jobs_drovealone = sum(estimate[which(mode == "Drove alone")]),
#         jobs_carpool2 = sum(estimate[which(mode == "In 2-person carpool")]),
#         jobs_carpool3 = sum(estimate[which(mode == "In 3-or-more-person carpool")]),
#       ) %>%
#       mutate(
#         vehicles_drovealone = jobs_drovealone,
#         vehicles_carpool2 = jobs_carpool2/2,
#         vehicles_carpool3 = jobs_carpool3/3,
#         jobs_car = jobs_drovealone+jobs_carpool2+jobs_carpool3,
#         jobs_carpool = jobs_carpool2+jobs_carpool3,
#         vehicles = vehicles_drovealone,vehicles_carpool2,vehicles_carpool3,
#         perc_jobs_car = jobs_car/jobs,
#         perc_jobs_carpool = jobs_carpool/jobs,
#         perc_vehicle = vehicles/jobs
#       )
#
#   stockton_lodes_h_mode <-
#     stockton_lodes_h_filter %>%
#     transmute(
#       residence = h_tract,
#       jobs = S000,
#       duration = duration,
#       person_miles = S000*as.numeric(distance)/1.60934,
#       person_hours = S000*as.numeric(duration)/60
#     ) %>%
#     mutate(
#       tier =
#         case_when(
#           duration < 10 ~ "Less than 10 minutes",
#           duration < 15 ~ "10 to 14 minutes",
#           duration < 20 ~ "15 to 19 minutes",
#           duration < 25 ~ "20 to 24 minutes",
#           duration < 30 ~ "25 to 29 minutes",
#           duration < 35 ~ "30 to 34 minutes",
#           duration < 45 ~ "35 to 44 minutes",
#           duration < 60 ~ "45 to 59 minutes",
#           TRUE ~ "60 or more minutes"
#         )
#     ) %>%
#     left_join(
#       travel_time_mode_summary %>%
#         dplyr::select(
#           tract,
#           time,
#           perc_jobs_car,
#           perc_jobs_carpool,
#           perc_vehicle
#         ),
#       by = c("residence" = "tract", "tier" = "time")
#     ) %>%
#     mutate(
#       jobs_car = jobs*perc_jobs_car,
#       jobs_carpool = jobs*perc_jobs_carpool,
#       vehicles = jobs*perc_vehicle,
#       vmt = person_miles*perc_vehicle
#     )
#
#     stockton_commute_vmt_tractmode <-
#       rbind(stockton_commute_vmt_tractmode,
#         data.frame(
#           Year = year,
#           person_miles = sum(stockton_lodes_h_mode$person_miles, na.rm=T),
#           jobs = sum(stockton_lodes_h_mode$jobs, na.rm=T),
#           jobs_car = sum(stockton_lodes_h_mode$jobs_car, na.rm=T),
#           jobs_carpool = sum(stockton_lodes_h_mode$jobs_carpool, na.rm=T),
#           vehicles = sum(stockton_lodes_h_mode$vehicles, na.rm = T),
#           vmt = sum(stockton_lodes_h_mode$vmt, na.rm=T)
#         )
#       )
#
#     save(stockton_commute_vmt_tractmode,file = "C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_tractmode.Rdata")
# }
# load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_tractmode.Rdata")
#
# stockton_commute_vmt_tractmode %>%
#   ggplot(
#     aes(
#       x = Year,
#       y = vmt/jobs
#     )
#   ) +
#   geom_line()
#
# stockton_commute_vmt_countymode <- NULL
#
# for(year in 2011:2017){
#
#   print(year)
#
#   load(paste0("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_lodes_",year,"_tract.Rdata"))
#
#   load(paste0("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs1_vars_",year,".Rdata"))
#
#   travel_time_mode <-
#     getCensus(
#       name = "acs/acs1",
#       vintage = year,
#       region = "county:077",
#       regionin = "state:06",
#       vars = "group(B08134)"
#     ) %>%
#     select_if(!names(.) %in% c("GEO_ID","state","NAME")) %>%
#     dplyr::select(-c(contains("EA"),contains("MA"),contains("M"))) %>%
#     gather(
#       key = "variable",
#       value = "estimate",
#       -county
#     ) %>%
#     mutate(
#       label = acs_vars$label[match(variable,acs_vars$name)],
#       time = # This extracts only the time information from our label.
#         substr(
#           label,
#           lapply(
#             label,
#             function(x){
#               ifelse(
#                 length(unlist(gregexpr('!!',x)))<3,
#                 NA,
#                 max(unlist(gregexpr('!!',x)))+2
#               )
#             }
#           ),
#           nchar(label)
#         ),
#       mode = # This extracts only the mode information from our label. It doesn't fully deal with double-counting, so some are further removed later on in a filter.
#         substr(
#           label,
#           lapply(
#             label,
#             function(x){
#               ifelse(
#                 length(unlist(gregexpr('!!',x)))<3,
#                 NA,
#                 unlist(gregexpr('!!',x))[length(unlist(gregexpr('!!',x)))-1]+2
#               )
#             }
#           ),
#           lapply(
#             label,
#             function(x){
#               max(unlist(gregexpr('!!',x)))-1
#             }
#           )
#         )
#     ) %>%
#     filter(!is.na(time)) %>% # This removes the grand total rows that are usually at the top of the ACS data.
#     filter(!mode %in% c("Car, truck, or van","Car truck or van","Carpooled","Public transportation (excluding taxicab)")) %>% # This removes double-counted subtotals.
#     dplyr::select(-variable,-label)
#
#     travel_time_mode_summary <-
#       travel_time_mode %>%
#       group_by(time) %>%
#       summarize(
#         jobs = sum(estimate),
#         jobs_drovealone = sum(estimate[which(mode == "Drove alone")]),
#         jobs_carpool2 = sum(estimate[which(mode == "In 2-person carpool")]),
#         jobs_carpool3 = sum(estimate[which(mode == "In 3-or-more-person carpool")]),
#       ) %>%
#       mutate(
#         vehicles_drovealone = jobs_drovealone,
#         vehicles_carpool2 = jobs_carpool2/2,
#         vehicles_carpool3 = jobs_carpool3/3,
#         jobs_car = jobs_drovealone+jobs_carpool2+jobs_carpool3,
#         jobs_carpool = jobs_carpool2+jobs_carpool3,
#         vehicles = vehicles_drovealone,vehicles_carpool2,vehicles_carpool3,
#         perc_jobs_car = jobs_car/jobs,
#         perc_jobs_carpool = jobs_carpool/jobs,
#         perc_vehicle = vehicles/jobs
#       )
#
#   stockton_lodes_h_mode <-
#     stockton_lodes_h_filter %>%
#     transmute(
#       jobs = S000,
#       duration = duration,
#       person_miles = S000*as.numeric(distance)/1.60934,
#       person_hours = S000*as.numeric(duration)/60
#     ) %>%
#     mutate(
#       tier =
#         case_when(
#           duration < 10 ~ "Less than 10 minutes",
#           duration < 15 ~ "10 to 14 minutes",
#           duration < 20 ~ "15 to 19 minutes",
#           duration < 25 ~ "20 to 24 minutes",
#           duration < 30 ~ "25 to 29 minutes",
#           duration < 35 ~ "30 to 34 minutes",
#           duration < 45 ~ "35 to 44 minutes",
#           duration < 60 ~ "45 to 59 minutes",
#           TRUE ~ "60 or more minutes"
#         )
#     ) %>%
#     left_join(
#       travel_time_mode_summary %>%
#         dplyr::select(
#           time,
#           perc_jobs_car,
#           perc_jobs_carpool,
#           perc_vehicle
#         ),
#       by = c("tier" = "time")
#     ) %>%
#     mutate(
#       jobs_car = jobs*perc_jobs_car,
#       jobs_carpool = jobs*perc_jobs_carpool,
#       vehicles = jobs*perc_vehicle,
#       vmt = person_miles*perc_vehicle
#     )
#
#     stockton_commute_vmt_countymode <-
#       rbind(stockton_commute_vmt_countymode,
#         data.frame(
#           Year = year,
#           person_miles = sum(stockton_lodes_h_mode$person_miles, na.rm=T),
#           jobs = sum(stockton_lodes_h_mode$jobs, na.rm=T),
#           jobs_car = sum(stockton_lodes_h_mode$jobs_car, na.rm=T),
#           jobs_carpool = sum(stockton_lodes_h_mode$jobs_carpool, na.rm=T),
#           vehicles = sum(stockton_lodes_h_mode$vehicles, na.rm = T),
#           vmt = sum(stockton_lodes_h_mode$vmt, na.rm=T)
#         )
#       )
# }
#
# save(stockton_commute_vmt_countymode, file = "C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_countymode.Rdata")
# load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_countymode.Rdata")
#
# stockton_commute_vmt_countymode %>%
#   ggplot(
#     aes(
#       x = Year,
#       y = vmt/jobs
#     )
#   ) +
#   geom_line()
#
# load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_bgmode.Rdata")
#
# load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_tractmode.Rdata")
#
# load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_commute_vmt_countymode.Rdata")
#
# stockton_commute_vmt_compare <-
#   rbind(
#     stockton_commute_vmt_bgmode %>%
#       mutate(mode = "block group"),
#     stockton_commute_vmt_tractmode %>%
#       mutate(mode = "tract"),
#     stockton_commute_vmt_countymode %>%
#       mutate(mode = "county")
#   )
#
# stockton_commute_vmt_compare %>%
#   ggplot(
#     aes(
#       x = Year,
#       y = vmt/jobs,
#       linetype = mode
#     )
#   ) +
#   geom_line()
stockton_county_commute_vmt_compare %>%
ggplot(
aes(
x = Year,
y = jobs_carpool/jobs_car,
linetype = type
)
) +
geom_line()
stockton_commute_vmt_tractmode_table <-
stockton_commute_vmt_tractmode %>%
transmute(
Year = Year,
`Commute One-Way VMT` = prettyNum(round(vmt,-3), big.mark=","),
`Workers` = prettyNum(round(jobs,-3), big.mark=","),
`One-Way VMT/Workers` = round(vmt/jobs,1),
`% Car-Dependent Workers who Carpool` = paste0(round(jobs_carpool/jobs_car*100,1),"%")
)
datatable(stockton_commute_vmt_tractmode_table, rownames = FALSE, options = list(pageLength = 7))
stockton_commute_vmt_bgmode_table <-
stockton_commute_vmt_bgmode %>%
transmute(
Year = Year,
`Commute One-Way VMT` = prettyNum(round(vmt,-3), big.mark=","),
`Workers` = prettyNum(round(jobs,-3), big.mark=","),
`One-Way VMT/Workers` = round(vmt/jobs,1),
`% Car-Dependent Workers who Carpool` = paste0(round(jobs_carpool/jobs_car*100,1),"%")
)
datatable(stockton_commute_vmt_bgmode_table, rownames = FALSE, options = list(pageLength = 7))
kable(
stockton_commute_vmt_bgmode_table,
booktabs = TRUE,
caption = 'Historical population and job counts for San Joaquin County 2010-2017, followed by projections to 2040.'
) %>%
kable_styling() %>%
scroll_box(width = "100%")
ggplot(
stockton_commute_vmt_tractmode,
aes(
x = Year,
y = vmt/jobs
)
) +
geom_line(size=2, color = "forest green") +
labs(
title = "Stockton Commute One-Way VMT/Workers",
x = "Year",
y = "One-Way VMT/Workers"
)
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/LODES/stockton_lodes_2017.Rdata")
stockton_lodes_h_counties_ghg <-
stockton_lodes_h_mode %>%
st_set_geometry(NULL) %>%
mutate(
COUNTY = substr(workplace,3,5)
) %>%
group_by(COUNTY) %>%
summarise_at(
vars(jobs,person_miles,person_hours,vehicles,vmt),
sum, na.rm=T
) %>%
mutate(
perc_jobs = jobs/sum(jobs),
annual_vmt = vmt*2*369.39,
annual_ghg = annual_vmt*0.000334,
perc_ghg = annual_ghg/sum(annual_ghg),
avg_ghg = annual_ghg/jobs
) %>%
left_join(ca_counties, by = c("COUNTY" = "COUNTYFP")) %>%
st_as_sf() %>%
arrange(desc(annual_ghg))
stockton_lodes_h_counties_ghg_table <-
stockton_lodes_h_counties_ghg %>%
st_set_geometry(NULL) %>%
transmute(
County = NAME,
Jobs = prettyNum(round(jobs,-2),big.mark=","),
`Percent Jobs` = paste0(round(perc_jobs*100),"%"),
`VMT (millions)` = prettyNum(round(annual_vmt/1000000),big.mark=","),
`Total Annual GHG (tCO2e)` = prettyNum(round(annual_ghg,-3),big.mark=","),
`Percent Annual GHG` = paste0(round(perc_ghg*100),"%"),
`Average Annual GHG/worker (tCO2e)` = round(avg_ghg,1)
)
datatable(stockton_lodes_h_counties_ghg_table[1:15,], rownames = FALSE, options = list(pageLength = 15))
kable(
stockton_lodes_h_counties_ghg_table[1:15,],
booktabs = TRUE,
caption = 'Historical population and job counts for San Joaquin County 2010-2017, followed by projections to 2040.'
) %>%
kable_styling() %>%
scroll_box(width = "100%")
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs5_vars_2018.Rdata")
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs1_vars_2017.Rdata")
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs1_vars_2018.Rdata")
acs_vars <-
listCensusMetadata(
name = "2018/acs/acs1",
type = "variables"
)
save(acs_vars, file="C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs1_vars_2018.Rdata")
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/acs1_vars_2018.Rdata")
heating_fuel <-
getCensus(
name = "acs/acs1",
vintage = 2018,
vars = "group(B25040)",
region = "place:75000",
regionin = "state:06"
) %>%
select_if(!names(.) %in% c("GEO_ID","state","place","NAME")) %>%
dplyr::select(-c(contains("EA"),contains("MA"),contains("M"))) %>%
gather(
key = "variable",
value = "estimate"
) %>%
mutate(
label = acs_vars$label[match(variable,acs_vars$name)]
) %>%
transmute(
`Heating Fuel Type` =
substr(
label,
lapply(
label, function(x){
max(unlist(gregexpr('!!',x)))+2
}
),
nchar(label)
),
`Number of Households` = estimate,
`Percent of Households` = paste0(round(estimate/95557*100,2),"%")
)
smud <-
data.frame(
Type = c("Single-family unit","Multi-family unit"),
`Standard Incentive` = c("$4,000","$1,250"),
`Induction cooking appliance bonus` = c("$1,000","$500"),
`Total possible incentives` = c("$5,000","$1,750")
) %>%
rename(
`Standard incentive` = Standard.Incentive,
`Induction cooking appliance bonus` = Induction.cooking.appliance.bonus,
`Total possible incentives` = Total.possible.incentives
)
datatable(smud, rownames = FALSE, options = list(pageLength = 2))
