ggplot(monthly_summaries, aes(as.factor(MONTH), monthly_total)) + geom_bar(stat = "identity", aes(fill = CUSTOMERCLASS), position = "dodge") + labs(x = "Month", y = "kBTU", title = "PG&E Territory Monthly Energy Usage, 2017", fill = "Energy Type")
zip_yearly_avg <- gas_elec %>% group_by(ZIPCODE) %>% summarise(total_kbtu = sum(total_kbtu), total_custs = max(TOTALCUSTOMERS))
# Remove entries with 0 customers
zip_yearly_avg <- zip_yearly_avg %>% filter(total_custs > 0)
zip_yearly_avg$yearly_avg <- zip_yearly_avg$total_kbtu/zip_yearly_avg$total_custs
zip_yearly_avg$ZIPCODE <- as.character(zip_yearly_avg$ZIPCODE)
ca_zips <- readOGR(dsn = "S:/CEE224X/A1/data/ca_zips", layer = "ca_zips")
ca_zips <- ca_zips[ca_zips@data$spatial_id %in% zip_yearly_avg$ZIPCODE,]
ca_zips@data <- ca_zips@data %>% left_join(zip_yearly_avg, by = c("spatial_id" = "ZIPCODE"))
breaks.qt <- classIntervals(ca_zips@data$yearly_avg, n = 5, style = "jenks", intervalClosure = "right")
breaks.qt$brks <- breaks.qt$brks %>% signif(digits = 2)
my.palette <- brewer.pal(n = 5, name = "Reds")
mapview(ca_zips, "yearly_avg", col = "transparent", col.regions = my.palette, at = breaks.qt$brks, legend = TRUE, layer.name = "Average Energy Use in kBTU")
#mapview(ca_zips, "yearly_avg", sp.layout = sp.raster, col = "transparent", col.regions = my.palette, at = breaks.qt$brks, legend = TRUE, layer.name = "Average Energy Use in kBTU")
View(gas_elec)
View(zip_yearly_avg)
View(gas_elec)
View(gas_elec)
tot_custs <- gas_elec group_by(ZIPCODE) %>% group_by(CUSTOMERCLASS) %>% summarise(total_e_custs = sum(TOTALCUSTOMERS))
tot_custs <- gas_elec %>% group_by(ZIPCODE) %>% group_by(CUSTOMERCLASS) %>% summarise(total_e_custs = sum(TOTALCUSTOMERS))
View(tot_custs)
tot_custs <- gas_elec %>% group_by(ZIPCODE)
zip_yearly_avg <- gas_elec %>% group_by(ZIPCODE) %>% summarise(total_kbtu = sum(total_kbtu), total_custs = max(TOTALCUSTOMERS))
# Remove entries with 0 customers
zip_yearly_avg <- zip_yearly_avg %>% filter(total_custs > 0)
zip_yearly_avg$yearly_avg <- zip_yearly_avg$total_kbtu/zip_yearly_avg$total_custs
zip_yearly_avg$ZIPCODE <- as.character(zip_yearly_avg$ZIPCODE)
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(readr)
library(dplyr)
library(tidyr)
library(censusapi)
install.packages("censusapi")
library(rmarkdown)
library(readr)
library(dplyr)
library(tidyr)
library(censusapi)
incometract16 <- getCensus(name = "acs/acs5", key = Sys.getenv("INSERTKEYHERE"), vintage = "2016", vars = "INSERTVARIABLEHERE",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", key = Sys.getenv("INSERTKEYHERE"), vintage = "2016", vars = "INSERTVARIABLEHERE",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
# Add key to .Renviron
Sys.setenv(CENSUS_KEY="INSERTYOURAPIKEYHERE")
# Reload .Renviron
# readRenviron("~/.Renviron")
incometract16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
# Add key to .Renviron
Sys.setenv(CENSUS_KEY="411f435e130307dae7118208fa4d413195e75a68")
# Reload .Renviron
# readRenviron("~/.Renviron")
incometract16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
Sys.setenv(CENSUS_KEY="411f435e130307dae7118208fa4d413195e75a68")
incometract16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
con <- gzcon(url("https://lehd.ces.census.gov/data/lodes/LODES7/ca/od/ca_od_main_JT02_2015.csv.gz"))
txt <- readLines(con)
dat <- read.csv(textConnection(txt))
remove(txt)
library(readr)
secured_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\secured_format.csv")
smc_secured <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\secmstr.txt", fwf_widths(secured_format$LENGTH,secured_format$FIELD), col_types = do.call(cols, as.list(secured_format$TYPE)))
resident_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\resident_format.csv")
smc_resident <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\resident.txt", fwf_widths(resident_format$LENGTH,resident_format$FIELD), col_types = do.call(cols, as.list(resident_format$TYPE)))
View(secured_format)
View(smc_secured)
header(smc_secured)
head(smc_secured)
secured_sample <- head(smc_secured)
resident_sample <- head(smc_resident)
write_csv(secured_sample,file = "S:\\Restricted Data Library\\SMC Assessor\\secured_sample.csv"))
write_csv(secured_sample,file = "S:\\Restricted Data Library\\SMC Assessor\\secured_sample.csv")
write_csv(secured_sample,"S:\\Restricted Data Library\\SMC Assessor\\secured_sample.csv")
write_csv(resident_sample,"S:\\Restricted Data Library\\SMC Assessor\\resident_sample.csv")
multifam_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
multifam_format$LENGTH
View(multifam_format)
multifam_format <- multifam_format[1:49,]
View(multifam_format)
write_csv(multifam_format,"S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
write_csv(multifam_format,"S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
multifam_sample <- head(smc_multifam)
write_csv(multifam_sample,"S:\\Restricted Data Library\\SMC Assessor\\multifam_sample.csv")
condo_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\condo_format.csv")
View(condo_format)
smc_condo <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\condo.txt", fwf_widths(condo_format$LENGTH,condo_format$FIELD), col_types = do.call(cols, as.list(condo_format$TYPE)))
condo_sample <- head(smc_condo)
write_csv(condo_sample,"S:\\Restricted Data Library\\SMC Assessor\\condo_sample.csv")
write_csv(smc_condo,"S:\\Restricted Data Library\\SMC Assessor\\smc_condo.csv")
write_csv(smc_multifam,"S:\\Restricted Data Library\\SMC Assessor\\smc_multifam.csv")
library(dplyr)
library(sp)
library(maptools)
library(Rmpfr)
SanMateo_inundation_poly_52 <- st_read("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_12.shp")
library(sf)
library(rgdal)
library(dplyr)
sm12 <- st_read("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_12.shp")
test3 <- sm12 %>% %>% summarize(area = sum(area))
test3 <- sm12 %>% summarize(area = sum(area))
sm12$area <- st_area(sm12)
View(sm12)
plot(sm12)
test <- st_convex_hull(sm12)
plot(test)
test <- st_simplify(sm12)
View(test)
plot(test)
test <- st_buffer(sm12, dist = 100)
plot(test)
plot(sm12, add = TRUE)
test2 <- st_buffer(test, dist = -100)
View(test2)
plot(test2, add = TRUE)
plot(test2, add = TRUE, border = 'white')
plot(test2)
plot(test)
plot(sm12)
plot(test2)
npts(sm12)
library(sf)
npts(sm12)
library(mapview)
npts(sm12)
npts(test)
npts(test2)
test <- st_buffer(sm12, dist = 200)
npts(test)
test2 <- st_buffer(test, dist = -200)
npts(test2)
plot(test2)
sm12 <- st_read("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_12.shp")
test <- st_buffer(sm12, dist = -10)
View(sm12)
plot(sm12)
npts(sm12)
plot(test)
npts(test)
projection <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")
flood_extents <- NULL
x <- 12
path <- paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp")
name <- paste0(x," in. total water level")
prep <- st_read(path)
prep <- st_buffer(st_buffer(st_buffer(prep,dist = -20), dist = 70), dist = -50)
plot(prep)
prep <- st_transform(prep,st_crs(projection))
prep <- prep %>% mutate(name = name) %>% select(name)
flood_extents <- rbind(flood_extents, prep)
x <- 24
path <- paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp")
name <- paste0(x," in. total water level")
prep <- st_read(path)
prep <- st_buffer(st_buffer(st_buffer(prep,dist = -20), dist = 70), dist = -50)
for(x in c(12,24,36,48,52)){
path <- paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp")
name <- paste0(x," in. total water level")
prep <- st_read(path)
prep <- st_buffer(st_buffer(st_buffer(prep,dist = -20), dist = 70), dist = -50)
prep <- st_transform(prep,st_crs(projection))
prep <- prep %>% mutate(name = name) %>% select(name)
flood_extents <- rbind(flood_extents, prep)
}
writeOGR(flood_extents, dsn="S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/flood_extents.kml", layer= "flood_extents", driver="KML", dataset_options=c("NameField=name"))
library(sf)
library(rgdal)
library(dplyr)
library(mapview)
library(tigris)
options(tigris_class = "sf")
projection <- "+proj=longlat +ellps=WGS84 +datum=WGS84"
places <- places("CA", cb = TRUE)
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 2000)
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 5000)
# flood_extents <- NULL
# index <- 1
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
# if(index == 1){
#   flood_extents <- epa_flood
# }
# else{
#   flood_extents[index,] <- epa_flood
# }
#
# index <- index + 1
}
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 4000)
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
}
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 10000)
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(kml_projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
}
kml_projection <- "+proj=longlat +ellps=WGS84 +datum=WGS84"
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(kml_projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
}
library(readr)
library(dplyr)
library(sf)
library(mapview)
multifam_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
epa_multifam <- smc_multifam %>% left_join(smc_secured, by = c("APN" = "APN")) %>% filter(`SITUS CITY` == "EAST PALO ALTO") %>% mutate(ADDRESS = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)))
secured_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\secured_format.csv")
smc_secured <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\secmstr.txt", fwf_widths(secured_format$LENGTH,secured_format$FIELD), col_types = do.call(cols, as.list(secured_format$TYPE)))
epa_multifam <- smc_multifam %>% left_join(smc_secured, by = c("APN" = "APN")) %>% filter(`SITUS CITY` == "EAST PALO ALTO") %>% mutate(ADDRESS = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)))
View(epa_multifam)
epa_multifam <- epa_multifam %>% mutate(`# OF UNITS` = `# OF STUDIO` + `# OF 1 BEDROOM/1 BATH` + `# OF 2 BEDROOMS/1 BATH` + `# OF 2 BEDROOMS/2 BATHS`)
names(epa_multifam)
epa_multifam <- epa_multifam %>% mutate(`# OF UNITS` = `# OF STUDIO` + `# OF 1 BEDROOM/1 BATH` + `# OF 2 BEDROOMS/1 BATH` + `# OF 2 BEDROOMS/2 BATHS`, `# OF STORIES` = substr(`# OF STORY`,1,1), `LOT SIZE` = `SQ FT USABLE`) %>% select(ADDRESS, APN, `LOT SIZE`, `# OF BLDG`, `# OF STORIES`,`# OF UNITS`, `UNITS ALLOWED`, `# OF BEDROOMS`, `GROSS BLDG AREA`, `NET RENT AREA`)
View(epa_multifam)
write_csv(epa_multifam, "S:\\Restricted Data Library\\SMC Assessor\\epa_multifam.csv")
View(multifam_format)
load("C:\\Users\\derek\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes.R")
library(tidycensus)
library(censusapi)
library(tigris)
library(dplyr)
library(ggplot2)
library(lehdr)
library(sf)
library(osrm)
library(mapview)
options(tigris_use_cache = TRUE)
options(tigris_class = "sf")
census_api_key("c8aa67e4086b4b5ce3a8717f59faa9a28f611dab", install = TRUE)
load("C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes.R")
View(stockton_lodes_summary)
View(stockton_wac)
View(stockton_rac)
mapview(stockton_rac, zcol='C000')
View(stockton_lodes_h)
stockton_lodes_h_summary <- stockton_lodes_h %>% mutate(person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(h_bg) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum)
unique(substr(stockton_lodes_h$w_bg),3,6)
unique(substr(stockton_lodes_h$w_bg,3,6))
unique(substr(stockton_lodes_h$w_bg,3,5))
ca_counties <- counties("CA", cb = TRUE)
View(ca_counties)
stockton_lodes_h <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5))
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP) %>% left_join(stockton_lodes_h, by = c("COUNTYFP" = "COUNTY"))
View(stockton_lodes_w_counties)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum)
View(stockton_lodes_w_counties)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
View(stockton_lodes_w_counties)
View(ca_counties)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
View(stockton_lodes_w_counties)
mapview(stockton_lodes_w_counties, zcol='S000')
sum(stockton_lodes_w_counties$S000)
sum(stockton_lodes_w_counties$S000, na.rm = TRUE)
sum(stockton_rac$S000, na.rm = TRUE)
sum(stockton_rac$C000, na.rm = TRUE)
mapview(stockton_lodes_w_counties, zcol='personmiles')
mapview(stockton_lodes_w_counties, zcol='person_miles')
sum(stockton_lodes_w_counties$person_miles, na.rm = TRUE)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
mapview(stockton_lodes_w_counties, zcol='avg_distance')
write_csv(stockton_lodes_w_counties, file = "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
write_csv(stockton_lodes_w_counties, filename = "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
library(readr)
write_csv(stockton_lodes_w_counties, filename = "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
write_csv(stockton_lodes_w_counties, file = "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
write.csv(stockton_lodes_w_counties, file = "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
write_csv(stockton_lodes_w_counties, file = "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
write_csv(stockton_lodes_w_counties, "C:\\Users\\Derek Ouyang\\Google Drive\\City Systems\\Stockton Green Economy\\LODES\\stockton_lodes_w_counties.csv")
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced"))
mapview(stockton_lodes_w_counties, zcol='avg_distance')
mapview(stockton_lodes_w_top_counties, zcol='avg_distance')
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% mutate(`Percent Total Jobs` = S000/sum(S000))
View(stockton_lodes_w_top_counties)
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% mutate(`Percent Total Jobs` = S000/sum(stockton_lodes_w_counties$S000))
sum(stockton_lodes_w_counties$S000)
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% mutate(`Percent Total Jobs` = S000/sum(stockton_lodes_w_counties$S000,na.rm = TRUE))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% mutate(`Percent Total Jobs` = S000/sum(stockton_lodes_w_counties$S000,na.rm = TRUE), `Percent VMT` = person_miles/sum(stockton_lodes_w_counties[which(stockton_lodes_w_counties$person_hours < 3),]$person_miles,na.rm = TRUE))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% mutate(`Percent Total Jobs` = S000/sum(stockton_lodes_w_counties$S000,na.rm = TRUE), `Percent VMT` = person_miles/sum(stockton_lodes_w_counties[which(stockton_lodes_w_counties$person_hours < 3),]$person_miles,na.rm = TRUE))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% mutate(`Percent Total Jobs` = S000/sum(stockton_lodes_w_counties$S000,na.rm = TRUE), `Percent VMT` = person_miles/sum(stockton_lodes_w_counties[which(stockton_lodes_w_counties$avg_duration < 3),]$person_miles,na.rm = TRUE))
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`))
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`))
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = 'GHG Annual'/S000)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = 'GHG Annual'/S000)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = 'GHG Annual'/as.numeric(S000))
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced"))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% arrange(desc(S000))
mapview(stockton_lodes_w_top_counties, zcol='Average GHG')
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39*0.00035812, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% arrange(desc(S000))
mapview(stockton_lodes_w_top_counties, zcol='Average GHG')
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39*0.00035812, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000) %>% rename(Jobs = S000)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% arrange(desc(S000))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% arrange(desc(Jobs))
mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), legend = TRUE)
mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE)
mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE)
mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE, label = TRUE)
mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE, label = makeLabels(stockton_lodes_w_top_counties, zcol = "Name"))
m1 <- mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE)
l1 <- addStaticLabels(m1, label = stockton_lodes_w_top_counties$NAME)
l1
m1 <- mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE)
m1
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent High Wage Jobs` = SE03/S000, `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39*0.00035812, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000) %>% rename(Jobs = S000)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent High Wage Jobs in County` = SE03/S000, `Percent High Wage Jobs Overall` = SE03/sum(SE03,na.rm = TRUE), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39*0.00035812, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000) %>% rename(Jobs = S000)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent High Wage Jobs in County` = SE03/S000, `Percent High Wage Jobs Overall` = SE03/sum(SE03,na.rm = TRUE), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39*0.00035812, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000) %>% rename(Jobs = S000)
m1 <- mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Percent High Wage Jobs in County","Average Distance","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE)
stockton_lodes_w_counties <- stockton_lodes_h %>% mutate(COUNTY = substr(w_bg,3,5), person_miles = S000*as.numeric(distance)/1.60934, person_hours = S000*as.numeric(duration)/60) %>% group_by(COUNTY) %>% summarise_at(c("S000","SA01","SA02","SA03","SE01","SE02","SE03","SI01","SI02","SI03","person_miles", "person_hours"), sum) %>% mutate(avg_distance = person_miles/S000, avg_duration = person_hours/S000, person_miles_rm_excessive = ifelse(avg_duration < 3, person_miles, 0), `Percent High Wage Jobs in County` = SE03/S000, `Percent High Wage Jobs Overall` = SE03/sum(SE03,na.rm = TRUE), `Percent Total Jobs` = S000/sum(S000,na.rm = TRUE), `Percent VMT` = person_miles_rm_excessive/sum(person_miles_rm_excessive,na.rm = TRUE),`GHG Annual` = (person_miles_rm_excessive*0.82*2+person_miles_rm_excessive*.116/2*2)*369.39*0.00035812, `Percent GHG` = `GHG Annual`/sum(`GHG Annual`), `Average GHG` = `GHG Annual`/S000) %>% rename(Jobs = S000, `Average Distance` = avg_distance)
stockton_lodes_w_counties <- ca_counties %>% select(COUNTYFP, NAME) %>% left_join(stockton_lodes_w_counties, by = c("COUNTYFP" = "COUNTY"))
stockton_lodes_w_top_counties <- stockton_lodes_w_counties %>% filter(NAME %in% c("San Joaquin", "Alameda", "Sacramento", "Santa Clara","Stanislaus","Contra Costa","San Francisco","San Mateo","Solano","Fresno","Placer","Yolo","Monterey","Sonoma","Merced")) %>% arrange(desc(Jobs))
m1 <- mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Percent High Wage Jobs in County","Average Distance","Average GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE)
m1
m1 <- mapview(stockton_lodes_w_top_counties, zcol=c("Jobs","Percent High Wage Jobs in County","Average Distance","Average GHG","Percent GHG"), map.types = c("OpenStreetMap"), legend = TRUE, hide = TRUE)
m1
setwd("~/GitHub/greeneconomy")
mapshot(m1, url = "stockton_lodes_w_top_counties.html")
acs5_17 <- load_variables(2017, "acs5")
View(acs5_17)
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002"), output = "wide") %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
census_api_key("c8aa67e4086b4b5ce3a8717f59faa9a28f611dab", install = TRUE)
census_api_key("c8aa67e4086b4b5ce3a8717f59faa9a28f611dab", overwrite = TRUE)
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002"), output = "wide") %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
compare_medincome %>%
mutate(NAME = gsub(" city", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red", size = 3) +
labs(title = "Median household income",
subtitle = "2013-2017 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
View(compare_medincome)
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002"), output = "long") %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002")) %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
compare_medincome %>%
mutate(NAME = gsub(" city", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red", size = 3) +
labs(title = "Median household income",
subtitle = "2013-2017 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
compare_medincome %>% filter(variable == laborforce)
compare_medincome %>% filter(variable %in% c("laborforce"))
compare_medincome %>% filter(variable %in% c("laborforce")) %>%
mutate(NAME = gsub(" city", "", NAME)) %>%
ggplot(aes(x = estimate, y = reorder(NAME, estimate))) +
geom_errorbarh(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point(color = "red", size = 3) +
labs(title = "Median household income",
subtitle = "2013-2017 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)")
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002")) %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana")) %>% mutate(perc_laborforce = laborforce / population)
compare_medincome %>% filter(variable %in% c("laborforce")) %>% mutate(perc_laborforce = laborforce / population)
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002")) %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
compare_medincome %>% filter(variable %in% c("laborforce")) %>% mutate(perc_laborforce = laborforce / population)
compare_medincome %>% filter(variable %in% c("laborforce")) %>% mutate(perc_laborforce = estimate / population)
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002", outpute = "wide") %>% filter(NAME %in% c("Stockton city, California",
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002", output = "wide") %>% filter(NAME %in% c("Stockton city, California",
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002"), output = "wide") %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
compare_medincome <- get_acs(geography = "place", variables = c(medincome = "B19013_001", population = "B01003_001", laborforce= "B23025_002"), output = "wide") %>% filter(NAME %in% c("Stockton city, California",
"Fort Collins city, Colorado",
"Denver city, Colorado",
"St. Louis city, Missouri",
"Cleveland city, Ohio",
"Pittsburgh city, Pennsylvania",
"Honolulu city, Hawaii",
"St. Paul city, Minnesota",
"Corpus Christi city, Texas",
"Sacramento city, California",
"Jackson city, Mississippi",
"South Bend city, Indiana"))
compare_medincome %>% mutate(perc_laborforce = laborforceE / populationE)
