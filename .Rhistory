`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
map
install.packages("markdown")
final <-
smc %>%
filter(!is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
`Exemption` = paste0("$",prettyNum(pmax(`EXEMPTION 1`,`EXEMPTION 2`),big.mark=",")),
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c(
"APN",
"Address",
"Acres",
"Land Value",
"Improvement Value",
"Exemption Category",
"Exemption",
"OWNER",
""
))
final <-
smc %>%
filter(!is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
`Exemption` = paste0("$",prettyNum(pmax(`EXEMPTION 1`,`EXEMPTION 2`),big.mark=",")),
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c(
"APN",
"Address",
"Acres",
"Land Value",
"Improvement Value",
"Exemption Category",
"Exemption",
"OWNER"
))
library(tidyverse)
library(tigris)
library(sf)
library(mapview)
library(knitr)
library(DT)
library(janitor)
library(gdata)
opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
mapviewOptions(basemaps = "OpenStreetMap")
options(
tigris_use_cache = TRUE,
tigris_class = "sf",
scipen=999
)
load("F:/Data Library/Parcels/smc_parcels.Rdata")
# secured_format <- read_csv(file = "f:/Restricted Data Library/SMC Assessor/secured_format.csv")
#
# smc_secured <- read_fwf(file = "f:/Restricted Data Library/SMC Assessor/secmstr.txt", fwf_widths(secured_format$LENGTH,secured_format$FIELD), col_types = do.call(cols, as.list(secured_format$TYPE)))
#
# save(smc_secured, file = "f:/Restricted Data Library/SMC Assessor/secmstr.Rdata")
load("F:/Restricted Data Library/SMC Assessor/secmstr.Rdata")
smc <-
smc_secured %>%
left_join(smc_parcels, by = "APN") %>%
st_as_sf() %>%
filter(!duplicated(APN)) %>%
mutate(
exemption =
ifelse(
grepl("CEM|CHU|FML|LSE|PRC|PSC|REL|VO|WEL|WER",`EXEMPTION CODE`),
ifelse(
grepl("VO",`EXEMPTION CODE`),
paste0(substr(`EXEMPTION CODE`,1,2),"*"),
paste0(substr(`EXEMPTION CODE`,1,3),"*")
),
`EXEMPTION CODE`
),
acres = as.numeric(st_area(.))/4046.86
)
exemption_label <- read_csv(file = "f:/Restricted Data Library/SMC Assessor/exemption.csv")
smc_summary <-
smc %>%
st_set_geometry(NULL) %>%
group_by(exemption) %>%
summarize(
Parcels = n(),
`Median Exemption` = round(pmax(median(`EXEMPTION 1`,na.rm=T),median(`EXEMPTION 2`,na.rm=T))),
`Total Acres` =
sum(acres, na.rm=T)
) %>%
left_join(
exemption_label,
by = c("exemption" = "EX CODE")
) %>%
transmute(
Category = `EX DESC`,
Parcels = Parcels,
`Total Acres` = prettyNum(round(`Total Acres`), big.mark = ","),
`Median Exemption` = paste0("$",prettyNum(`Median Exemption`,big.mark = ","))
) %>%
mutate(
Category =
ifelse(
is.na(Category),
"No Exemption",
Category
)
) %>%
arrange(desc(Parcels))
datatable(smc_summary,rownames = FALSE, options = list(pageLength = 26))
smc_jurisdiction_summary <-
smc %>%
st_set_geometry(NULL) %>%
mutate(
Jurisdiction =
ifelse(
`SITUS CITY` %in% c(
"EL GRANADA",
"LA HONDA",
"LADERA",
"LOMA MAR",
"MIRAMAR",
"MONTARA",
"MOSS BEACH",
"PESCADERO",
"PRINCETON",
"SAN GREGORIO",
"STANFORD LANDS"
) | is.na(`SITUS CITY`),
"UNINCORPORATED",
`SITUS CITY`
)
) %>%
group_by(exemption,Jurisdiction) %>%
summarize(
Parcels = n(),
`Total Acres` = sum(acres,na.rm=T)
) %>%
ungroup() %>%
left_join(
exemption_label,
by = c("exemption" = "EX CODE")
) %>%
transmute(
Category = `EX DESC`,
Parcels = Parcels,
`Total Acres` = `Total Acres`,
Jurisdiction = Jurisdiction
) %>%
mutate(
Category =
ifelse(
is.na(Category),
"No Exemption",
Category
)
)
smc_jurisdiction_summary_count <-
smc_jurisdiction_summary %>%
mutate(
Parcels = prettyNum(Parcels,big.mark=",")
) %>%
dplyr::select(-`Total Acres`) %>%
spread(
key = Category,
value = Parcels,
) %>%
t() %>%
as.data.frame(stringsAsFactors=F) %>%
rownames_to_column() %>%
mutate(
rowname =
ifelse(
rowname == "Jurisdiction",
"Category",
rowname
)
) %>%
row_to_names(row_number = 1)
smc_jurisdiction_summary_count[is.na(smc_jurisdiction_summary_count)] = 0
datatable(smc_jurisdiction_summary_count,rownames = FALSE, options = list(pageLength = 27))
smc_jurisdiction_summary_acres <-
smc_jurisdiction_summary %>%
mutate(
`Total Acres` = prettyNum(round(`Total Acres`),big.mark=",")
) %>%
dplyr::select(-Parcels) %>%
spread(
key = Category,
value = `Total Acres`,
) %>%
t() %>%
as.data.frame(stringsAsFactors=F) %>%
rownames_to_column() %>%
mutate(
rowname =
ifelse(
rowname == "Jurisdiction",
"Category",
rowname
)
) %>%
row_to_names(row_number = 1)
smc_jurisdiction_summary_acres[is.na(smc_jurisdiction_summary_acres)] = 0
datatable(smc_jurisdiction_summary_acres,rownames = FALSE, options = list(pageLength = 27))
jurisdictions <-
colnames(smc_jurisdiction_summary_count)[-1]
for(jurisdiction in jurisdictions[1:2]){
map <-
smc %>%
filter(`SITUS CITY` == jurisdiction & !is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
mapshot(map, url = paste0(jurisdiction,".html"))
cat(paste0("## ",jurisdiction))
map
}
final <-
smc %>%
filter(!is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
`Exemption` = paste0("$",prettyNum(pmax(`EXEMPTION 1`,`EXEMPTION 2`),big.mark=",")),
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c(
"APN",
"Address",
"Acres",
"Land Value",
"Improvement Value",
"Exemption Category",
"Exemption",
"OWNER"
))
jurisdictions <-
colnames(smc_jurisdiction_summary_count)[-1]
for(jurisdiction in jurisdictions[1]){
map <-
smc %>%
filter(`SITUS CITY` == jurisdiction & !is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
mapshot(map, url = paste0(jurisdiction,".html"))
cat(paste0("## ",jurisdiction))
map
}
jurisdictions <-
colnames(smc_jurisdiction_summary_count)[-1]
for(jurisdiction in jurisdictions[1]){
map <-
smc %>%
filter(`SITUS CITY` == jurisdiction & !is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
mapshot(map, url = paste0(jurisdiction,".html"))
# cat(paste0("## ",jurisdiction))
map
}
jurisdictions <-
colnames(smc_jurisdiction_summary_count)[-1]
for(jurisdiction in jurisdictions[1]){
map <-
smc %>%
filter(`SITUS CITY` == jurisdiction & !is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
mapshot(map, url = paste0(jurisdiction,".html"))
# cat(paste0("## ",jurisdiction))
}
map
jurisdictions[2]
jurisdictions[3]
jurisdictions[4]
jurisdictions[5]
jurisdictions[6]
jurisdictions
jurisdiction <- jurisdictions[20]
map <-
smc %>%
filter(`SITUS CITY` == jurisdiction & !is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
map <-
smc %>%
filter(`SITUS CITY` %in% c(
"EL GRANADA",
"LA HONDA",
"LADERA",
"LOMA MAR",
"MIRAMAR",
"MONTARA",
"MOSS BEACH",
"PESCADERO",
"PRINCETON",
"SAN GREGORIO",
"STANFORD LANDS"
) | is.na(`SITUS CITY`)) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
map
map <-
smc %>%
filter(`SITUS CITY` %in% c(
"EL GRANADA",
"LA HONDA",
"LADERA",
"LOMA MAR",
"MIRAMAR",
"MONTARA",
"MOSS BEACH",
"PESCADERO",
"PRINCETON",
"SAN GREGORIO",
"STANFORD LANDS"
) | is.na(`SITUS CITY`))
map <-
smc %>%
filter(`SITUS CITY` %in% c(
"EL GRANADA",
"LA HONDA",
"LADERA",
"LOMA MAR",
"MIRAMAR",
"MONTARA",
"MOSS BEACH",
"PESCADERO",
"PRINCETON",
"SAN GREGORIO",
"STANFORD LANDS"
) | is.na(`SITUS CITY`)) %>%
filter(!is.na(exemption) & !exemption %in% c("HO","HODP","HOCO")) %>%
left_join(exemption_label, by = c("exemption" = "EX CODE")) %>%
mutate(
Address = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)),
`Land Value` = paste0("$",prettyNum(`LAND VALUE`,big.mark=",")),
`Improvement Value` = paste0("$",prettyNum(`IMPROVEMENT VALUE`,big.mark=",")),
`Exemption Category` = `EX DESC`,
Acres = prettyNum(round(acres),big.mark=",")
) %>%
dplyr::select(c("APN","Address","Land Value","Improvement Value","Exemption Category","Acres")) %>%
mapview()
map
rmarkdown::
rmarkdown::pandoc_version()
load("C:/Users/derek/Google Drive/City Systems/Stockton Green Economy/stockton_greeneconomy.Rdata")
library(tidycensus)
library(censusapi)
library(tigris)
library(units)
library(lehdr)
library(sf)
library(osrm)
library(mapview)
library(tidyverse)
library(magrittr)
library(lwgeom)
library(knitr)
library(DT)
opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
mapviewOptions(basemaps = "OpenStreetMap")
options(
tigris_use_cache = TRUE,
tigris_class = "sf",
osrm.server = "http://127.0.0.1:5000/",
scipen=999
)
census_api_key("c8aa67e4086b4b5ce3a8717f59faa9a28f611dab", install = TRUE, overwrite = TRUE)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
opts_chunk$set(
echo = TRUE,
warning=FALSE, message=FALSE,
cache = TRUE
)
install.packages("bookdown")
library(bookdown)
gitbook(fig_caption = TRUE, number_sections = TRUE,
self_contained = FALSE, lib_dir = "libs", pandoc_args = NULL, template = "default", split_by = c("chapter",
"chapter+number", "section", "section+number",
"rmd", "none"), split_bib = TRUE, config = list(),
table_css = TRUE)
setwd("~/GitHub/greeneconomy")
gitbook(fig_caption = TRUE, number_sections = TRUE,
self_contained = FALSE, lib_dir = "libs", pandoc_args = NULL, template = "default", split_by = c("chapter",
"chapter+number", "section", "section+number",
"rmd", "none"), split_bib = TRUE, config = list(),
table_css = TRUE)
opts_chunk$set(
echo = TRUE,
warning=FALSE, message=FALSE
)
setwd("~/GitHub/greeneconomy/js")
setwd("~/GitHub/greeneconomy")
codejs <- readr::read_lines("js/codefolding.js")
collapsejs <- readr::read_lines("js/collapse.js")
transitionjs <- readr::read_lines("js/transition.js")
htmlhead <-
paste('
<script>',
paste(transitionjs, collapse = "\n"),
'</script>
<script>',
paste(collapsejs, collapse = "\n"),
'</script>
<script>',
paste(codejs, collapse = "\n"),
'</script>
<style type="text/css">
.code-folding-btn { margin-bottom: 4px; }
.row { display: flex; }
.collapse { display: none; }
.in { display:block }
</style>
<script>
$(document).ready(function () {
window.initializeCodeFolding("show" === "show");
});
</script>
', sep = "\n")
readr::write_lines(htmlhead, path = "header.html")
htmlhead <-
paste('
<script>',
paste(transitionjs, collapse = "\n"),
'</script>
<script>',
paste(collapsejs, collapse = "\n"),
'</script>
<script>',
paste(codejs, collapse = "\n"),
'</script>
<style type="text/css">
.code-folding-btn { margin-bottom: 4px; }
.row { display: flex; }
.collapse { display: none; }
.in { display:block }
</style>
<script>
$(document).ready(function () {
window.initializeCodeFolding("show" === "hide");
});
</script>
', sep = "\n")
readr::write_lines(htmlhead, path = "header.html")
setwd("~/GitHub/greeneconomy/js")
setwd("~/GitHub/greeneconomy")
