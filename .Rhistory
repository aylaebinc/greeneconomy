zip_yearly_avg <- zip_yearly_avg %>% filter(total_custs > 0)
zip_yearly_avg$yearly_avg <- zip_yearly_avg$total_kbtu/zip_yearly_avg$total_custs
zip_yearly_avg$ZIPCODE <- as.character(zip_yearly_avg$ZIPCODE)
ca_zips <- readOGR(dsn = "S:/CEE224X/A1/data/ca_zips", layer = "ca_zips")
ca_zips <- ca_zips[ca_zips@data$spatial_id %in% zip_yearly_avg$ZIPCODE,]
ca_zips@data <- ca_zips@data %>% left_join(zip_yearly_avg, by = c("spatial_id" = "ZIPCODE"))
breaks.qt <- classIntervals(ca_zips@data$yearly_avg, n = 5, style = "jenks", intervalClosure = "right")
breaks.qt$brks <- breaks.qt$brks %>% signif(digits = 2)
my.palette <- brewer.pal(n = 5, name = "Reds")
mapview(ca_zips, "yearly_avg", col = "transparent", col.regions = my.palette, at = breaks.qt$brks, legend = TRUE, layer.name = "Average Energy Use in kBTU")
#mapview(ca_zips, "yearly_avg", sp.layout = sp.raster, col = "transparent", col.regions = my.palette, at = breaks.qt$brks, legend = TRUE, layer.name = "Average Energy Use in kBTU")
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(scales)
library(rgdal)
library(sp)
library(classInt)
library(RColorBrewer)
library(rgeos)
library(ggmap)
library(mapview)
elec <- rbind(read_csv("S:/CEE224X/A1/Data/PGE_2017_Q1_ElectricUsageByZip.csv"), read_csv("S:/CEE224X/A1/Data/PGE_2017_Q2_ElectricUsageByZip.csv"), read_csv("S:/CEE224X/A1/Data/PGE_2017_Q3_ElectricUsageByZip.csv"), read_csv("S:/CEE224X/A1/Data/PGE_2017_Q4_ElectricUsageByZip.csv"))
gas <- rbind(read_csv("S:/CEE224X/A1/Data/PGE_2017_Q1_GasUsageByZip.csv"), read_csv("S:/CEE224X/A1/Data/PGE_2017_Q2_GasUsageByZip.csv"), read_csv("S:/CEE224X/A1/Data/PGE_2017_Q3_GasUsageByZip.csv"), read_csv("S:/CEE224X/A1/Data/PGE_2017_Q4_GasUsageByZip.csv"))
elec$total_kbtu   <- elec$TOTALKWH*3.4121416331
gas$total_kbtu   <- gas$TOTALTHM*99.9761
elec <- elec %>% filter(CUSTOMERCLASS == "Elec- Residential")
gas  <- gas %>% filter(CUSTOMERCLASS == "Gas- Residential")
gas_elec <- rbind(subset(gas, select = c("ZIPCODE", "MONTH", "CUSTOMERCLASS", "TOTALCUSTOMERS", "total_kbtu")), subset(elec, select = c("ZIPCODE", "MONTH", "CUSTOMERCLASS", "TOTALCUSTOMERS", "total_kbtu")))
monthly_summaries <- gas_elec %>% group_by(CUSTOMERCLASS, MONTH) %>% summarize(monthly_total = sum(total_kbtu))
ggplot(monthly_summaries, aes(as.factor(MONTH), monthly_total)) + geom_bar(stat = "identity", aes(fill = CUSTOMERCLASS), position = "dodge") + labs(x = "Month", y = "kBTU", title = "PG&E Territory Monthly Energy Usage, 2017", fill = "Energy Type")
zip_yearly_avg <- gas_elec %>% group_by(ZIPCODE) %>% summarise(total_kbtu = sum(total_kbtu), total_custs = max(TOTALCUSTOMERS))
# Remove entries with 0 customers
zip_yearly_avg <- zip_yearly_avg %>% filter(total_custs > 0)
zip_yearly_avg$yearly_avg <- zip_yearly_avg$total_kbtu/zip_yearly_avg$total_custs
zip_yearly_avg$ZIPCODE <- as.character(zip_yearly_avg$ZIPCODE)
ca_zips <- readOGR(dsn = "S:/CEE224X/A1/data/ca_zips", layer = "ca_zips")
ca_zips <- ca_zips[ca_zips@data$spatial_id %in% zip_yearly_avg$ZIPCODE,]
ca_zips@data <- ca_zips@data %>% left_join(zip_yearly_avg, by = c("spatial_id" = "ZIPCODE"))
breaks.qt <- classIntervals(ca_zips@data$yearly_avg, n = 5, style = "jenks", intervalClosure = "right")
breaks.qt$brks <- breaks.qt$brks %>% signif(digits = 2)
my.palette <- brewer.pal(n = 5, name = "Reds")
mapview(ca_zips, "yearly_avg", col = "transparent", col.regions = my.palette, at = breaks.qt$brks, legend = TRUE, layer.name = "Average Energy Use in kBTU")
#mapview(ca_zips, "yearly_avg", sp.layout = sp.raster, col = "transparent", col.regions = my.palette, at = breaks.qt$brks, legend = TRUE, layer.name = "Average Energy Use in kBTU")
View(gas_elec)
View(zip_yearly_avg)
View(gas_elec)
View(gas_elec)
tot_custs <- gas_elec group_by(ZIPCODE) %>% group_by(CUSTOMERCLASS) %>% summarise(total_e_custs = sum(TOTALCUSTOMERS))
tot_custs <- gas_elec %>% group_by(ZIPCODE) %>% group_by(CUSTOMERCLASS) %>% summarise(total_e_custs = sum(TOTALCUSTOMERS))
View(tot_custs)
tot_custs <- gas_elec %>% group_by(ZIPCODE)
zip_yearly_avg <- gas_elec %>% group_by(ZIPCODE) %>% summarise(total_kbtu = sum(total_kbtu), total_custs = max(TOTALCUSTOMERS))
# Remove entries with 0 customers
zip_yearly_avg <- zip_yearly_avg %>% filter(total_custs > 0)
zip_yearly_avg$yearly_avg <- zip_yearly_avg$total_kbtu/zip_yearly_avg$total_custs
zip_yearly_avg$ZIPCODE <- as.character(zip_yearly_avg$ZIPCODE)
knitr::opts_chunk$set(echo = TRUE)
library(rmarkdown)
library(readr)
library(dplyr)
library(tidyr)
library(censusapi)
install.packages("censusapi")
library(rmarkdown)
library(readr)
library(dplyr)
library(tidyr)
library(censusapi)
incometract16 <- getCensus(name = "acs/acs5", key = Sys.getenv("INSERTKEYHERE"), vintage = "2016", vars = "INSERTVARIABLEHERE",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", key = Sys.getenv("INSERTKEYHERE"), vintage = "2016", vars = "INSERTVARIABLEHERE",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
# Add key to .Renviron
Sys.setenv(CENSUS_KEY="INSERTYOURAPIKEYHERE")
# Reload .Renviron
# readRenviron("~/.Renviron")
incometract16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
# Add key to .Renviron
Sys.setenv(CENSUS_KEY="411f435e130307dae7118208fa4d413195e75a68")
# Reload .Renviron
# readRenviron("~/.Renviron")
incometract16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
Sys.setenv(CENSUS_KEY="411f435e130307dae7118208fa4d413195e75a68")
incometract16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "tract:*", regionin = "state:06+county:001,013,041,055,075,081,085,095,097")
colnames(incometract16)[4] <- "Tract"
incomecounty16 <- getCensus(name = "acs/acs5", vintage = "2016", vars = "B19013_001E",
region = "county:001,013,041,055,075,081,085,095,097", regionin = "state:06")
colnames(incomecounty16)[3] <- "County"
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(readr)
library(dplyr)
library(purrr)
library(tidyr)
con <- gzcon(url("https://lehd.ces.census.gov/data/lodes/LODES7/ca/od/ca_od_main_JT02_2015.csv.gz"))
txt <- readLines(con)
dat <- read.csv(textConnection(txt))
remove(txt)
library(readr)
secured_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\secured_format.csv")
smc_secured <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\secmstr.txt", fwf_widths(secured_format$LENGTH,secured_format$FIELD), col_types = do.call(cols, as.list(secured_format$TYPE)))
resident_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\resident_format.csv")
smc_resident <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\resident.txt", fwf_widths(resident_format$LENGTH,resident_format$FIELD), col_types = do.call(cols, as.list(resident_format$TYPE)))
View(secured_format)
View(smc_secured)
header(smc_secured)
head(smc_secured)
secured_sample <- head(smc_secured)
resident_sample <- head(smc_resident)
write_csv(secured_sample,file = "S:\\Restricted Data Library\\SMC Assessor\\secured_sample.csv"))
write_csv(secured_sample,file = "S:\\Restricted Data Library\\SMC Assessor\\secured_sample.csv")
write_csv(secured_sample,"S:\\Restricted Data Library\\SMC Assessor\\secured_sample.csv")
write_csv(resident_sample,"S:\\Restricted Data Library\\SMC Assessor\\resident_sample.csv")
multifam_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
multifam_format$LENGTH
View(multifam_format)
multifam_format <- multifam_format[1:49,]
View(multifam_format)
write_csv(multifam_format,"S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
write_csv(multifam_format,"S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
multifam_sample <- head(smc_multifam)
write_csv(multifam_sample,"S:\\Restricted Data Library\\SMC Assessor\\multifam_sample.csv")
condo_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\condo_format.csv")
View(condo_format)
smc_condo <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\condo.txt", fwf_widths(condo_format$LENGTH,condo_format$FIELD), col_types = do.call(cols, as.list(condo_format$TYPE)))
condo_sample <- head(smc_condo)
write_csv(condo_sample,"S:\\Restricted Data Library\\SMC Assessor\\condo_sample.csv")
write_csv(smc_condo,"S:\\Restricted Data Library\\SMC Assessor\\smc_condo.csv")
write_csv(smc_multifam,"S:\\Restricted Data Library\\SMC Assessor\\smc_multifam.csv")
library(dplyr)
library(sp)
library(maptools)
library(Rmpfr)
SanMateo_inundation_poly_52 <- st_read("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_12.shp")
library(sf)
library(rgdal)
library(dplyr)
sm12 <- st_read("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_12.shp")
test3 <- sm12 %>% %>% summarize(area = sum(area))
test3 <- sm12 %>% summarize(area = sum(area))
sm12$area <- st_area(sm12)
View(sm12)
plot(sm12)
test <- st_convex_hull(sm12)
plot(test)
test <- st_simplify(sm12)
View(test)
plot(test)
test <- st_buffer(sm12, dist = 100)
plot(test)
plot(sm12, add = TRUE)
test2 <- st_buffer(test, dist = -100)
View(test2)
plot(test2, add = TRUE)
plot(test2, add = TRUE, border = 'white')
plot(test2)
plot(test)
plot(sm12)
plot(test2)
npts(sm12)
library(sf)
npts(sm12)
library(mapview)
npts(sm12)
npts(test)
npts(test2)
test <- st_buffer(sm12, dist = 200)
npts(test)
test2 <- st_buffer(test, dist = -200)
npts(test2)
plot(test2)
sm12 <- st_read("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_12.shp")
test <- st_buffer(sm12, dist = -10)
View(sm12)
plot(sm12)
npts(sm12)
plot(test)
npts(test)
projection <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84")
flood_extents <- NULL
x <- 12
path <- paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp")
name <- paste0(x," in. total water level")
prep <- st_read(path)
prep <- st_buffer(st_buffer(st_buffer(prep,dist = -20), dist = 70), dist = -50)
plot(prep)
prep <- st_transform(prep,st_crs(projection))
prep <- prep %>% mutate(name = name) %>% select(name)
flood_extents <- rbind(flood_extents, prep)
x <- 24
path <- paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp")
name <- paste0(x," in. total water level")
prep <- st_read(path)
prep <- st_buffer(st_buffer(st_buffer(prep,dist = -20), dist = 70), dist = -50)
for(x in c(12,24,36,48,52)){
path <- paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp")
name <- paste0(x," in. total water level")
prep <- st_read(path)
prep <- st_buffer(st_buffer(st_buffer(prep,dist = -20), dist = 70), dist = -50)
prep <- st_transform(prep,st_crs(projection))
prep <- prep %>% mutate(name = name) %>% select(name)
flood_extents <- rbind(flood_extents, prep)
}
writeOGR(flood_extents, dsn="S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/flood_extents.kml", layer= "flood_extents", driver="KML", dataset_options=c("NameField=name"))
library(sf)
library(rgdal)
library(dplyr)
library(mapview)
library(tigris)
options(tigris_class = "sf")
projection <- "+proj=longlat +ellps=WGS84 +datum=WGS84"
places <- places("CA", cb = TRUE)
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 2000)
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 5000)
# flood_extents <- NULL
# index <- 1
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
# if(index == 1){
#   flood_extents <- epa_flood
# }
# else{
#   flood_extents[index,] <- epa_flood
# }
#
# index <- index + 1
}
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 4000)
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
}
epa_boundary <- places[places$NAME == 'East Palo Alto',]
epa_boundary <- st_transform(epa_boundary,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_buffer <- st_buffer(epa_boundary, dist = 10000)
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(kml_projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
}
kml_projection <- "+proj=longlat +ellps=WGS84 +datum=WGS84"
for(x in c(12,24,36,48,52)){
prep <- st_read(paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/San_Mateo_",x,".shp"))
prep <- st_transform(prep,"+proj=utm +zone=10 +datum=NAD83 +units=m +no_defs")
epa_flood <- st_buffer(st_buffer(st_simplify(st_intersection(epa_buffer,prep),preserveTopology = TRUE, dTolerance = 10), dist = 10), dist = -10) %>% st_transform(kml_projection) %>% mutate(name = paste0(x," in. total water level")) %>% select(name)
st_write(epa_flood, paste0("S:/CEE224Y/Resilience/Data_Library/ART_Maps/Simplified_Maps/sm",x,".kml"), driver="KML", update = TRUE)
}
library(readr)
library(dplyr)
library(sf)
library(mapview)
multifam_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam_format.csv")
smc_multifam <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\multifam.txt", fwf_widths(multifam_format$LENGTH,multifam_format$FIELD), col_types = do.call(cols, as.list(multifam_format$TYPE)))
epa_multifam <- smc_multifam %>% left_join(smc_secured, by = c("APN" = "APN")) %>% filter(`SITUS CITY` == "EAST PALO ALTO") %>% mutate(ADDRESS = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)))
secured_format <- read_csv(file = "S:\\Restricted Data Library\\SMC Assessor\\secured_format.csv")
smc_secured <- read_fwf(file = "S:\\Restricted Data Library\\SMC Assessor\\secmstr.txt", fwf_widths(secured_format$LENGTH,secured_format$FIELD), col_types = do.call(cols, as.list(secured_format$TYPE)))
epa_multifam <- smc_multifam %>% left_join(smc_secured, by = c("APN" = "APN")) %>% filter(`SITUS CITY` == "EAST PALO ALTO") %>% mutate(ADDRESS = gsub("NA ","", paste(gsub("^0+", "",`SITUS NO1`),`SITUS DIRECTION`,`SITUS STREET`,`SITUS STREET TYPE`)))
View(epa_multifam)
epa_multifam <- epa_multifam %>% mutate(`# OF UNITS` = `# OF STUDIO` + `# OF 1 BEDROOM/1 BATH` + `# OF 2 BEDROOMS/1 BATH` + `# OF 2 BEDROOMS/2 BATHS`)
names(epa_multifam)
epa_multifam <- epa_multifam %>% mutate(`# OF UNITS` = `# OF STUDIO` + `# OF 1 BEDROOM/1 BATH` + `# OF 2 BEDROOMS/1 BATH` + `# OF 2 BEDROOMS/2 BATHS`, `# OF STORIES` = substr(`# OF STORY`,1,1), `LOT SIZE` = `SQ FT USABLE`) %>% select(ADDRESS, APN, `LOT SIZE`, `# OF BLDG`, `# OF STORIES`,`# OF UNITS`, `UNITS ALLOWED`, `# OF BEDROOMS`, `GROSS BLDG AREA`, `NET RENT AREA`)
View(epa_multifam)
write_csv(epa_multifam, "S:\\Restricted Data Library\\SMC Assessor\\epa_multifam.csv")
View(multifam_format)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
smc_blocks <- st_read("S:/Data Library/California Blocks/tl_2010_06081_tabblock10/tl_2010_06081_tabblock10.shp")
library(tidycensus)
library(censusapi)
library(mapview)
library(rgdal)
library(dplyr)
library(tigris)
library(readr)
library(sf)
options(tigris_class = "sf")
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
smc_blocks <- st_read("S:/Data Library/California Blocks/tl_2010_06081_tabblock10/tl_2010_06081_tabblock10.shp")
smc_blocks <- st_read("S:/Data Library/California Blocks/tl_2010_06081_tabblock10/tl_2010_06081_tabblock10.shp")
setwd("~/GitHub/greeneconomy")
stockton_bldg <- read_csv("C:\Users\Derek Ouyang\Google Drive\City Systems\Stockton Green Economy\USBuildingFootprints")
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints")
library(readr)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints")
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv")
View(stockton_bldg)
View(stockton_bldg)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT")
library(dplyr)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT")
library(sf)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT")
View(stockton_bldg)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv")
stockton_bldg <- st_geometry(st_as_sf(stockton_bldg, wkt = "WKT"))
View(stockton_bldg)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(stockton_bldg, wkt = "WKT")
st_crs(stockton_bldg)
test <- stockton_bldg %>% st_set_crs(4326)
st_crs(test)
stockton_bldg <- stockton_bldg %>% st_set_crs(4326)
View(stockton_bldg)
stockton_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT") %>% st_set_crs(4326)
library(tigris)
stockton_boundary <- places("CA", cb = TRUE) %>% filter(NAME == "Stockton")
options(tigris_use_cache = TRUE)
options(tigris_class = "sf")
stockton_boundary <- places("CA", cb = TRUE) %>% filter(NAME == "Stockton")
View(stockton_boundary)
st_crs(stocton_boundary)
st_crs(stockton_boundary)
stockton_boundary <- places("CA", cb = TRUE) %>% filter(NAME == "Stockton") %>% st_transform(st_crs(4326))
st_crs(stockton_boundary)
test <- stockton_bldg[which(stockton_bldg %in% st_centroid(stockton_bldg)[stockton_boundary,]),]
sjc_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT") %>% st_set_crs(4326) %>% mutate(id = row_number())
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary,]$id),]
View(stockton_bldg)
library(mapview)
mapview(stockton_bldg)
sjc_bgs <- block_groups("California", "San Joaquin County", cb = TRUE)
sjc_bgs <- block_groups("California", "San Joaquin County", cb = TRUE) %>% st_transform(st_crs(4326))
stockton_bgs <- sjc_bgs[stockton_boundary,]
mapview(stockton_bgs)
stockton_bgs <- sjc_bgs[stockton_boundary,] %>% filter(!(GEOID %in% c("060770040011","060770039001","060770041061","060770039001","060770039002","060770051311","060770051351","060770041022")))
mapview(stockton_bgs)
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_bgs,]$id),]
mapview(stockton_bldg)
mapview(stockton_boundary)
mapview(stockton_boundary) + mapview(stockton_bgs)
test <- sjc_bgs[stockton_boundary,]
mapview(stockton_boundary) + mapview(test)
mapview(stockton_boundary) + mapview(test) + mapview(stockton_bgs)
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_bgs,]$id | sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary,]$id),]
View(sjc_bgs)
stockton_bgs <- sjc_bgs[which(sjc_bgs$GEOID %in% st_centroid(sjc_bgs)[stockton_boundary,]$GEOID),]
mapview(stockton_boundary) + mapview(stockton_bgs)
stockton_bgs <- sjc_bgs[stockton_boundary,] %>% filter(!(GEOID %in% c("060770040011","060770039001","060770041061","060770039001","060770039002","060770051311","060770051351","060770041022")))
mapview(stockton_boundary) + mapview(stockton_bgs)
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp")
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp") %>% st_transform(st_crs(4326))
mapview(stockton_boundary_influence)
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp") %>% filter(sPHERE == "Stockton") %>% st_transform(st_crs(4326))
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp") %>% filter(SPHERE == "Stockton") %>% st_transform(st_crs(4326))
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp") %>% filter(SPHERE == "STOCKTON") %>% st_transform(st_crs(4326))
mapview(stockton_boundary_influence)
mapview(stockton_boundary_influence)+mapview(stockton_boundary)
stockton_bldg <- sjc_bldg[sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary_influence,]$id),]
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary_influence,]$id),]
sjc_parcels <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Parcels/Parcels.shp")
View(sjc_parcels)
View(stockton_bldg)
test <- st_join(st_centroid(stockton_bldg), sjc_parcels) %>% select(APN, id) %>% st_set_geometry(NULL)
sjc_parcels <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Parcels/Parcels.shp") %>% st_transform(st_crs(4326))
bldg_parcel_join <- st_join(st_centroid(stockton_bldg), sjc_parcels) %>% select(APN, id) %>% st_set_geometry(NULL)
save.image("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/A.Rdata")
library(readr)
library(dplyr)
library(sf)
library(tigris)
library(mapview)
library(lwgeom)
options(tigris_use_cache = TRUE)
options(tigris_class = "sf")
load("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/stockton_bldg.Rdata")
View(stockton_bldg)
sjc_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT") %>% st_set_crs(4326) %>% mutate(id = row_number())
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp") %>% filter(SPHERE == "STOCKTON") %>% st_transform(st_crs(4326))
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary_influence,]$id),]
sjc_parcels <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Parcels/Parcels.shp") %>% st_transform(st_crs(4326))
# sjc_parcels_valid <- sjc_parcels %>% mutate(valid = st_is_valid(.))
sjc_parcels_valid <- st_make_valid(sjc_parcels)
stockton_parcels <- sjc_parcels_valid[stockton_boundary_influence,]
bldg_parcel_join <- st_join(st_centroid(stockton_bldg), stockton_parcels) %>% select(APN, id) %>% st_set_geometry(NULL)
sjc_bgs <- block_groups("California", "San Joaquin County", cb = TRUE) %>% st_transform(st_crs(4326))
stockton_bgs <- sjc_bgs[stockton_boundary_influence,]
bldg_bg_join <- st_join(st_centroid(stockton_bldg), stockton_bgs) %>% select(GEOID, id) %>% st_set_geometry(NULL)
stockton_bldg <- stockton_bldg %>% left_join(bldg_parcel_join, by="id") %>% left_join(bldg_bg_join, by="id")
stockton_parcels <- sjc_parcels_valid[stockton_boundary_influence,] %>% mutate(parcel_area = st_area(.))
View(sjc_parcels)
View(stockton_bgs)
View(stockton_parcels)
names(stockton_parcels)
bldg_parcel_join <- st_join(st_centroid(stockton_bldg), stockton_parcels) %>% select(APN, id, STAREA__) %>% rename(area = STAREA__) %>% st_set_geometry(NULL)
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary_influence,]$id),]
bldg_parcel_join <- st_join(st_centroid(stockton_bldg), stockton_parcels) %>% select(APN, id, STAREA__) %>% rename(area = STAREA__) %>% st_set_geometry(NULL)
stockton_bldg <- stockton_bldg %>% left_join(bldg_parcel_join, by="id") %>% left_join(bldg_bg_join, by="id")
View(stockton_bgs)
View(stockton_bldg)
View(stockton_bldg)
load("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/sjc_assessor.Rdata")
sjc_assessor <- sjc_assessor %>% mutate(APN = as.numeric(`UNFORMATTED APN`))
stockton_bldg <- stockton_bldg %>% left_join(sjc_assessor, by="APN")
save(stockton_bldg, file = "C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/stockton_bldg.Rdata")
sjc_zoning <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Zoning/Zoning.shp") %>% st_transform(st_crs(4326))
mapview(sjc_zoning)
stockton_zoning <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Stockton_Zoning/Zoning.shp") %>% st_transform(st_crs(4326))
mapview(stockton_zoning)
sjc_zoning <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Zoning/Zoning.shp") %>% st_transform(st_crs(4326)) %>% filter(ZNLABEL != "STOCKTON")
mapview(sjc_zoning)
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary_influence,]$id),]
View(stockton_zoning)
bldg_zoning_join <- st_join(st_centroid(stockton_bldg), stockton_zoning) %>% select(ZONE, id) %>% st_set_geometry(NULL)
View(bldg_zoning_join)
sum(is.na(bldg_zoning_join$ZONE))
View(sjc_zoning)
bldg_zoning_join_uninc <- st_join(st_centroid(stockton_bldg), sjc_zoning) %>% select(ZNCODE, id) %>% st_set_geometry(NULL)
sum(is.na(bldg_zoning_join_uninc$ZNCODE))
sum(is.na(bldg_zoning_join_uninc$ZNCODE))+sum(is.na(bldg_zoning_join$ZONE))
bldg_zoning_join %<>% cbind(bldg_zoning_join_uninc)
library(magrittr)
bldg_zoning_join %<>% cbind(bldg_zoning_join_uninc)
bldg_zoning_join <- st_join(st_centroid(stockton_bldg), stockton_zoning) %>% select(ZONE, id) %>% st_set_geometry(NULL)
bldg_zoning_join %<>% cbind(bldg_zoning_join_uninc$ZNCODE) %>% mutate(ZONE = ifelse(is.na(.),ZNCODE,ZONE))
test <- bldg_zoning_join cbind(bldg_zoning_join_uninc$ZNCODE) %>% mutate(ZONE = ifelse(is.na(.),ZNCODE,ZONE))
test <- bldg_zoning_join %>% cbind(bldg_zoning_join_uninc$ZNCODE) %>% mutate(ZONE = ifelse(is.na(.),ZNCODE,ZONE))
test <- bldg_zoning_join %>% cbind(bldg_zoning_join_uninc$ZNCODE) #%>% mutate(ZONE = ifelse(is.na(.),ZNCODE,ZONE))
View(test)
test <- bldg_zoning_join %>% merge(bldg_zoning_join_uninc) #%>% mutate(ZONE = ifelse(is.na(.),ZNCODE,ZONE))
View(test)
test <- bldg_zoning_join %>% merge(bldg_zoning_join_uninc) %>% mutate(ZONE = ifelse(is.na(.),ZNCODE,ZONE))
test <- bldg_zoning_join %>% merge(bldg_zoning_join_uninc) %>% mutate(ZONE = ifelse(is.na(ZONE),ZNCODE,ZONE))
View(test)
test <- bldg_zoning_join %>% merge(bldg_zoning_join_uninc) %>% mutate(ZONE = ifelse(is.na(ZONE),ZNCODE,ZONE))
View(test)
test <- bldg_zoning_join %>% merge(bldg_zoning_join_uninc) #%>% mutate(ZONE = ifelse(is.na(ZONE),ZNCODE,ZONE))
View(test)
is.na(bldg_zoning_join$ZONE)
test = ifelse(is.na(bldg_zoning_join$ZONE),bldg_zoning_join$ZNCODE,bldg_zoning_join$ZONE)
test2 <- ifelse(is.na(test$ZONE),test$ZNCODE,test$ZONE)
test2 <- ifelse(is.na(test$ZONE),test$ZNCODE,NA)
test$ZNCODE
as.character(test$ZNCODE)
test2 <- ifelse(is.na(test$ZONE),as.character(test$ZNCODE),NA)
test <- bldg_zoning_join %>% merge(bldg_zoning_join_uninc) %>% mutate(ZONE = ifelse(is.na(ZONE),as.character(ZNCODE),as.character(ZONE)))
View(test)
bldg_zoning_join %<>% merge(bldg_zoning_join_uninc) %>% mutate(ZONE = ifelse(is.na(ZONE),as.character(ZNCODE),as.character(ZONE))) %>% select(ZONE, id)
View(bldg_zoning_join)
stockton_bldg_final <- stockton_bldg %>% left_join(bldg_parcel_join, by="id") %>% left_join(bldg_zoning_join, by="id") %>% left_join(bldg_bg_join, by="id") %>% left_join(sjc_assessor, by="APN")
save(stockton_bldg_final, file = "C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/stockton_bldg.Rdata")
View(stockton_bldg_final)
library(readr)
library(dplyr)
library(sf)
library(tigris)
library(mapview)
library(lwgeom)
library(magrittr)
options(tigris_use_cache = TRUE)
options(tigris_class = "sf")
sjc_bldg <- read_csv("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/USBuildingFootprints/ca_06077_footprints.csv") %>% st_as_sf(wkt = "WKT") %>% st_set_crs(4326) %>% mutate(id = row_number())
stockton_boundary_influence <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/SpheresOfInfluence/SpheresOfInfluence.shp") %>% filter(SPHERE == "STOCKTON") %>% st_transform(st_crs(4326))
stockton_bldg <- sjc_bldg[which(sjc_bldg$id %in% st_centroid(sjc_bldg)[stockton_boundary_influence,]$id),]
sjc_parcels <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Parcels/Parcels.shp") %>% st_transform(st_crs(4326))
# sjc_parcels_valid <- sjc_parcels %>% mutate(valid = st_is_valid(.))
sjc_parcels_valid <- st_make_valid(sjc_parcels)
stockton_parcels <- sjc_parcels_valid[stockton_boundary_influence,]
bldg_parcel_join <- st_join(st_centroid(stockton_bldg), stockton_parcels) %>% select(APN, id, STAREA__) %>% rename(area = STAREA__) %>% st_set_geometry(NULL)
sjc_zoning <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Zoning/Zoning.shp") %>% st_transform(st_crs(4326)) %>% filter(ZNLABEL != "STOCKTON")
stockton_zoning <- st_read("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/Stockton_Zoning/Zoning.shp") %>% st_transform(st_crs(4326))
bldg_zoning_join <- st_join(st_centroid(stockton_bldg), stockton_zoning) %>% select(ZONE, id) %>% st_set_geometry(NULL)
bldg_zoning_join_uninc <- st_join(st_centroid(stockton_bldg), sjc_zoning) %>% select(ZNCODE, id) %>% st_set_geometry(NULL)
bldg_zoning_join %<>% merge(bldg_zoning_join_uninc) %>% mutate(ZONE = ifelse(is.na(ZONE),as.character(ZNCODE),as.character(ZONE))) %>% select(ZONE, id)
sjc_bgs <- block_groups("California", "San Joaquin County", cb = TRUE) %>% st_transform(st_crs(4326))
stockton_bgs <- sjc_bgs[stockton_boundary_influence,]
bldg_bg_join <- st_join(st_centroid(stockton_bldg), stockton_bgs) %>% select(GEOID, id) %>% st_set_geometry(NULL)
load("C:/Users/Derek Ouyang/Google Drive/City Systems/Stockton Green Economy/sjc_assessor.Rdata")
View(sjc_assessor)
#this takes a long time, so you can load sjc_assessor.Rdata instead
tax_col_specs <- read_csv("S:/Restricted Data Library/CoreLogic/Stanford_University_TAX_06_CALIFORNIA/tax_cols.csv")
col_specs_list <- as.list(tax_col_specs$col_spec)
View(col_specs_list)
names(col_specs_list) <- tax_col_specs$Field
names(col_specs_list) <- tax_col_specs$Field
mapview(stockton_bldg_final)
sjc_assessor <- sjc_assessor %>% mutate(APN = as.numeric(`UNFORMATTED APN`))
stockton_bldg_final <- stockton_bldg %>% left_join(bldg_parcel_join, by="id") %>% left_join(bldg_zoning_join, by="id") %>% left_join(bldg_bg_join, by="id") %>% left_join(sjc_assessor, by="APN")
